plugin.tx_entity_frontend {
	view {
		templateRootPaths.0 = EXT:entity/Resources/Private/Templates/
		templateRootPaths.1 = {$plugin.tx_entity_frontend.view.templateRootPath}
		partialRootPaths.0 = EXT:entity/Resources/Private/Partials/
		partialRootPaths.1 = {$plugin.tx_entity_frontend.view.partialRootPath}
		layoutRootPaths.0 = EXT:entity/Resources/Private/Layouts/
		layoutRootPaths.1 = {$plugin.tx_entity_frontend.view.layoutRootPath}
	}

	persistence {
		storagePid = {$plugin.tx_entity_frontend.persistence.storagePid}
		#recursive = 1
	}

	features {
		#skipDefaultArguments = 1
		# if set to 1, the enable fields are ignored in BE context
		ignoreAllEnableFieldsInBe = 0
		# Should be on by default, but can be disabled if all action in the plugin are uncached
		requireCHashArgumentForActionArguments = 1
	}

	mvc {
		#callDefaultActionIfActionCantBeResolved = 1
	}
}

plugin.tx_seo {
	config {
		xmlSitemap {
			sitemaps {
				entityFrontend {
					provider = TYPO3\CMS\Seo\XmlSitemap\RecordsXmlSitemapDataProvider
					config {
						table = tx_entity_domain_model_entity
						sortField = sorting
						lastModifiedField = tstamp
#						changeFreqField = news_changefreq
#						priorityField = news_priority
#						additionalWhere = AND (no_index = 0 OR no_follow = 0)
						pid = {$plugin.tx_entity_frontend.persistence.storagePid}
						url {
							pageId = 48
							fieldToParameterMap {
								uid = tx_entity_frontend[entity]
							}

							additionalGetParameters {
								tx_entity_frontend.controller = Entity
								tx_entity_frontend.action = show
							}
						}
					}
				}
			}
		}
	}
}

config.pageTitleProviders {
	entity {
		provider = Ps\Entity\Provider\PageTitleProvider
		before = record, seo
	}
}

page.10.dataProcessing.31 = Ps\Entity\DataProcessing\BreadcrumbProcessor
page.10.dataProcessing.31 {
	uidArgument = tx_entity_frontend|entity
	titleField = title
}